#version 330 core

layout(location = 0) in vec3 position;
layout(location = 1) in int VHue;

out vec3 FColor;

//uniform mat4 transMat;
uniform mat4 projMat;
//uniform mat4 viewMat;

uniform float useHue, hueS, hueV, hueMult;

float f(in float x)
{
    return clamp(abs(x - 3.0) - 1.0, hueV * (1.0 - hueS), hueV);
}

vec3 h(in float x)
{
    return vec3(f(mod(x, 6.0)),
                f(mod(x + 4.0, 6.0)),
                f(mod(x + 2.0, 6.0)));
}

void main()
{
    //gl_Position = projMat * viewMat * transMat * vec4(position, 1.0);

    FColor = h(VHue * hueMult / 50.0) * useHue + vec3(1.0 - useHue);

    gl_Position = projMat * vec4(position, 1.0);
}
